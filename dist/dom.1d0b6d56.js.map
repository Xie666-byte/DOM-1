{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","childNodes","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","object","key","class","add","className","classList","contains","eventName","fn","addEventListener","removeEventListener","selector","scope","querySelectorAll","children","Array","from","filter","n","nodeType","previousSibling","nodeList","i","call","list"],"mappings":"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","file":"dom.1d0b6d56.js","sourceRoot":"..\\src","sourcesContent":["//封装DOM\r\nwindow.dom={\r\n    //创建节点\r\n    create(string){//相当于window.dom.create,string是要传入的节点\r\n        const container = document.createElement(\"template\");\r\n        container.innerHTML=string.trim();//将要传入的节点传给目标节点，上面目标节点是template，这个标签可以容纳任意的元素;trim()可以去掉目标节点中的空格\r\n        return container.content.firstChild;\r\n        //创建节点时，在id为test的div外面加一个div才有有效，否则就会报错，具体原因未知\r\n    },\r\n    //新增一个弟弟,在node节点后面加node2节点\r\n    after(node,node2){\r\n        node.parentNode.insertBefore(node2,node.nextSibling);\r\n    },\r\n    //新增一个哥哥，把node2加到node前面\r\n    before(node,node2){\r\n        node.parentNode.insertBefore(node2,node);\r\n    },\r\n    //新增儿子\r\n    append(parent,node){\r\n        parent.appendChild(node)\r\n    },\r\n    //新增爸爸\r\n    wrap(node,parent){\r\n        //先把parent放入到node节点前面，然后把node放到parent节点里面\r\n        dom.before(node,parent)\r\n        dom.append(parent,node)\r\n    },\r\n    //删除节点\r\n    remove(node){\r\n        node.parentNode.removeChild(node)\r\n        return node\r\n    },\r\n    //删除所有子节点\r\n    empty(node){\r\n        const {childNodes} = node;//等价于const childNodes = node.childNodes;\r\n        const array = []\r\n        let x = node.firstChild //第一个节点\r\n        //当第一个节点x存在，就把x移除放在空数组里面\r\n        while(x){\r\n            array.push(dom.remove(node.firstChild))\r\n            x=node.firstChild\r\n        }\r\n        return array\r\n    },\r\n    //读写（改）属性\r\n    attr(node,name,value){\r\n        //重载：根据参数的个数，写不同的代码\r\n        if(arguments.length===3){\r\n            node.setAttribute(name,value)\r\n        }else if(arguments.length===2){\r\n            return node.getAttribute(name)\r\n        }\r\n    },\r\n    //读写（改）标签的文本内容\r\n    text(node,string){\r\n        //node.innerText = string 适用于ie\r\n        //node.textContent = string 适用于firefox、chrome\r\n        //为了功能可以在所有的浏览器中使用，可以做一个检测，这种方式叫做适配\r\n        if('innerText' in node){\r\n            node.innerText = string\r\n        }else{\r\n            node.textContent = string\r\n        }\r\n    },\r\n    //改html内容\r\n    html(node,string){\r\n        if(arguments.length===2){\r\n            node.innerHTML = string\r\n        }else if(arguments.length===1){\r\n            return node.innerHTML\r\n        }\r\n    },\r\n    //修改style属性，下面是修改node节点的属性\r\n    style(node,name,value){\r\n        if(arguments.length===3){\r\n            //dom.style(div,'color','red')\r\n            node.style[name] = value\r\n        }else if(arguments===2){\r\n            if(typeof name ==='string'){\r\n                //dom.style(div,'color')\r\n                return node.style[name]\r\n            }else if(name instanceof Object){\r\n                const object = name\r\n                //遍历name\r\n        for(let key in object){\r\n            node.style[key] = object[key]\r\n        }\r\n            }\r\n        }\r\n        \r\n    },\r\n    //添加class\r\n    class:{\r\n        add(node,className){\r\n            node.classList.add(className)\r\n        }\r\n    },\r\n    //删除class\r\n    remove(node,className){\r\n        node.classList.remove(className)\r\n    },\r\n    //想知道有没有class\r\n    has(node,className){\r\n        return node.classList.contains(className)\r\n    },\r\n    on(node,eventName,fn){\r\n        node.addEventListener(eventName,fn)\r\n    },\r\n    off(node,eventName,fn){\r\n        node.removeEventListener(eventName,fn)\r\n    },\r\n    find(selector, scope){\r\n        return (scope || document).querySelectorAll(selector)\r\n      },\r\n      parent(node){\r\n        return node.parentNode\r\n      },\r\n      children(node){\r\n        return node.children\r\n      },\r\n      siblings(node){\r\n        return Array.from(node.parentNode.children)\r\n        .filter(n=>n!==node)\r\n      },\r\n      next(node){\r\n        let x = node.nextSibling\r\n        while(x && x.nodeType === 3){\r\n          x = x.nextSibling\r\n        }\r\n        return x\r\n      },\r\n      previous(node){\r\n        let x = node.previousSibling\r\n        while(x && x.nodeType === 3){\r\n          x = x.previousSibling\r\n        }\r\n        return x\r\n      },\r\n      each(nodeList, fn){\r\n        for(let i=0;i<nodeList.length;i++){\r\n          fn.call(null, nodeList[i])\r\n        }\r\n      },\r\n      index(node){\r\n        const list = dom.children(node.parentNode)\r\n        let i\r\n        for(i=0;i<list.length;i++){\r\n          if(list[i] === node){\r\n            break\r\n          }\r\n        }\r\n        return i\r\n      }\r\n};"]}